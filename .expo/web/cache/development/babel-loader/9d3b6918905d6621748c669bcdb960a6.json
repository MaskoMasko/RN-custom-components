{"ast":null,"code":"import RNText from \"react-native-web/dist/exports/Text\";\nimport { layoutProps } from \"../utils/layoutProps\";\nvar Text = layoutProps(RNText);\nexport { Text };","map":{"version":3,"names":["layoutProps","Text","RNText"],"sources":["C:/Users/Korisnik/Desktop/RN-custom-components/src/components/Text.tsx"],"sourcesContent":["import { StyleProp, Text as RNText, TextProps, TextStyle } from \"react-native\";\r\nimport React from \"react\";\r\nimport { F } from \"../style/constants\";\r\nimport { layoutProps } from \"../utils/layoutProps\";\r\n\r\ninterface CTextProps {\r\n  text?: string;\r\n  fontSize?: \"fsizeS\" | \"fsizeM\" | \"fsizeL\" | \"fsizeXL\" | \"fsizeXXL\";\r\n  bold?: boolean;\r\n  textColor?: string;\r\n  //necu jos family\r\n}\r\n\r\nconst Text = layoutProps<TextProps, RNText>(RNText);\r\n\r\n// const Text = React.forwardRef<RNText, CTextProps>(\r\n//   ({ text, fontSize, bold, textColor }: CTextProps, ref) => {\r\n//     function resolveFontSize() {\r\n//       if (fontSize === \"fsizeS\") return F.fsizeS;\r\n//       if (fontSize === \"fsizeM\") return F.fsizeM;\r\n//       if (fontSize === \"fsizeL\") return F.fsizeL;\r\n//       if (fontSize === \"fsizeXL\") return F.fsizeXL;\r\n//       return F.fsizeXXL;\r\n//     }\r\n//     const textStyle: TextStyle = {\r\n//       fontSize: fontSize ? resolveFontSize() : F.fsizeL,\r\n//       fontWeight: bold ? \"bold\" : \"normal\",\r\n//       color: textColor ?? \"black\",\r\n//     };\r\n//     return (\r\n//       <RNText ref={ref} style={textStyle}>\r\n//         {text}\r\n//       </RNText>\r\n//     );\r\n//   }\r\n// );\r\n\r\nexport { Text };\r\n"],"mappings":";AAGA,SAASA,WAAT;AAUA,IAAMC,IAAI,GAAGD,WAAW,CAAoBE,MAApB,CAAxB;AAwBA,SAASD,IAAT"},"metadata":{},"sourceType":"module"}